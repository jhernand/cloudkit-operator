//
// Copyright (c) 2025 Red Hat, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: fulfillment/v1/cluster_template_type.proto

//go:build protoopaque

package fulfillmentv1

import (
	v1 "github.com/innabox/cloudkit-operator/internal/api/shared/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A cluster template defines a type of cluster that can be ordered by the user. Note that the user doesn't create these
// templates: the system provides a collection of them, and the user chooses one.
type ClusterTemplate struct {
	state                  protoimpl.MessageState                 `protogen:"opaque.v1"`
	xxx_hidden_Id          string                                 `protobuf:"bytes,1,opt,name=id,proto3"`
	xxx_hidden_Metadata    *v1.Metadata                           `protobuf:"bytes,2,opt,name=metadata,proto3"`
	xxx_hidden_Title       string                                 `protobuf:"bytes,3,opt,name=title,proto3"`
	xxx_hidden_Description string                                 `protobuf:"bytes,4,opt,name=description,proto3"`
	xxx_hidden_Parameters  *[]*ClusterTemplateParameterDefinition `protobuf:"bytes,5,rep,name=parameters,proto3"`
	xxx_hidden_NodeSets    map[string]*ClusterTemplateNodeSet     `protobuf:"bytes,6,rep,name=node_sets,json=nodeSets,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ClusterTemplate) Reset() {
	*x = ClusterTemplate{}
	mi := &file_fulfillment_v1_cluster_template_type_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterTemplate) ProtoMessage() {}

func (x *ClusterTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_fulfillment_v1_cluster_template_type_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClusterTemplate) GetId() string {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return ""
}

func (x *ClusterTemplate) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *ClusterTemplate) GetTitle() string {
	if x != nil {
		return x.xxx_hidden_Title
	}
	return ""
}

func (x *ClusterTemplate) GetDescription() string {
	if x != nil {
		return x.xxx_hidden_Description
	}
	return ""
}

func (x *ClusterTemplate) GetParameters() []*ClusterTemplateParameterDefinition {
	if x != nil {
		if x.xxx_hidden_Parameters != nil {
			return *x.xxx_hidden_Parameters
		}
	}
	return nil
}

func (x *ClusterTemplate) GetNodeSets() map[string]*ClusterTemplateNodeSet {
	if x != nil {
		return x.xxx_hidden_NodeSets
	}
	return nil
}

func (x *ClusterTemplate) SetId(v string) {
	x.xxx_hidden_Id = v
}

func (x *ClusterTemplate) SetMetadata(v *v1.Metadata) {
	x.xxx_hidden_Metadata = v
}

func (x *ClusterTemplate) SetTitle(v string) {
	x.xxx_hidden_Title = v
}

func (x *ClusterTemplate) SetDescription(v string) {
	x.xxx_hidden_Description = v
}

func (x *ClusterTemplate) SetParameters(v []*ClusterTemplateParameterDefinition) {
	x.xxx_hidden_Parameters = &v
}

func (x *ClusterTemplate) SetNodeSets(v map[string]*ClusterTemplateNodeSet) {
	x.xxx_hidden_NodeSets = v
}

func (x *ClusterTemplate) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *ClusterTemplate) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type ClusterTemplate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Unique identifier of the template.
	Id       string
	Metadata *v1.Metadata
	// Human friendly short description of the template, only a few words, suitable for displaying in one single
	// line on a UI or CLI.
	Title string
	// Human friendly long description of the template, using Markdown format.
	Description string
	// Definitions of the parameters that can be used to customize the template.
	//
	// Note that these are only the *definitions* of the parameters, not the actual values. The actual values are in the
	// `spec.template_parameters` field of the cluster order.
	Parameters []*ClusterTemplateParameterDefinition
	// Initial node sets of the cluster.
	NodeSets map[string]*ClusterTemplateNodeSet
}

func (b0 ClusterTemplate_builder) Build() *ClusterTemplate {
	m0 := &ClusterTemplate{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	x.xxx_hidden_Metadata = b.Metadata
	x.xxx_hidden_Title = b.Title
	x.xxx_hidden_Description = b.Description
	x.xxx_hidden_Parameters = &b.Parameters
	x.xxx_hidden_NodeSets = b.NodeSets
	return m0
}

// Contains type and documentation of a template parameter.
type ClusterTemplateParameterDefinition struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        string                 `protobuf:"bytes,1,opt,name=name,proto3"`
	xxx_hidden_Title       string                 `protobuf:"bytes,2,opt,name=title,proto3"`
	xxx_hidden_Description string                 `protobuf:"bytes,3,opt,name=description,proto3"`
	xxx_hidden_Required    bool                   `protobuf:"varint,4,opt,name=required,proto3"`
	xxx_hidden_Type        string                 `protobuf:"bytes,5,opt,name=type,proto3"`
	xxx_hidden_Default     *anypb.Any             `protobuf:"bytes,6,opt,name=default,proto3"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ClusterTemplateParameterDefinition) Reset() {
	*x = ClusterTemplateParameterDefinition{}
	mi := &file_fulfillment_v1_cluster_template_type_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterTemplateParameterDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterTemplateParameterDefinition) ProtoMessage() {}

func (x *ClusterTemplateParameterDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_fulfillment_v1_cluster_template_type_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClusterTemplateParameterDefinition) GetName() string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return ""
}

func (x *ClusterTemplateParameterDefinition) GetTitle() string {
	if x != nil {
		return x.xxx_hidden_Title
	}
	return ""
}

func (x *ClusterTemplateParameterDefinition) GetDescription() string {
	if x != nil {
		return x.xxx_hidden_Description
	}
	return ""
}

func (x *ClusterTemplateParameterDefinition) GetRequired() bool {
	if x != nil {
		return x.xxx_hidden_Required
	}
	return false
}

func (x *ClusterTemplateParameterDefinition) GetType() string {
	if x != nil {
		return x.xxx_hidden_Type
	}
	return ""
}

func (x *ClusterTemplateParameterDefinition) GetDefault() *anypb.Any {
	if x != nil {
		return x.xxx_hidden_Default
	}
	return nil
}

func (x *ClusterTemplateParameterDefinition) SetName(v string) {
	x.xxx_hidden_Name = v
}

func (x *ClusterTemplateParameterDefinition) SetTitle(v string) {
	x.xxx_hidden_Title = v
}

func (x *ClusterTemplateParameterDefinition) SetDescription(v string) {
	x.xxx_hidden_Description = v
}

func (x *ClusterTemplateParameterDefinition) SetRequired(v bool) {
	x.xxx_hidden_Required = v
}

func (x *ClusterTemplateParameterDefinition) SetType(v string) {
	x.xxx_hidden_Type = v
}

func (x *ClusterTemplateParameterDefinition) SetDefault(v *anypb.Any) {
	x.xxx_hidden_Default = v
}

func (x *ClusterTemplateParameterDefinition) HasDefault() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Default != nil
}

func (x *ClusterTemplateParameterDefinition) ClearDefault() {
	x.xxx_hidden_Default = nil
}

type ClusterTemplateParameterDefinition_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Name of the parameter.
	//
	// This is the name that should be used in the `template_parameters` field of the order to assign a value to the
	// parameter.
	Name string
	// Human friendly short description of the parameter, only a few words, suitable for displaying in one single line on
	// a UI or CLI.
	Title string
	// Human friendly description of the parameter, using Markdown format.
	Description string
	// Indicates if this parameter is required or optional.
	//
	// Values for required parameters must be included when sending the order, otherwise it will be rejected.
	//
	// Note that there may be other dependencies between parameters which may cause a order to be rejected. For example,
	// the allowed values of a parameter may depend on the value of another parameter. That kind of information will be in
	// the `description` field.
	Required bool
	// Type of the parameter.
	//
	// The possible values are the same as those used by the `type_url` field of the `Any` type:
	//
	// | Type                           | Value                                             |
	// |--------------------------------|---------------------------------------------------|
	// | Boolean                        | `type.googleapis.com/google.protobuf.BoolValue`   |
	// | Integer number, 32 bits        | `type.googleapis.com/google.protobuf.Int32Value`  |
	// | Integer number, 64 bits        | `type.googleapis.com/google.protobuf.Int64Value`  |
	// | Floating point number, 32 bits | `type.googleapis.com/google.protobuf.FloatValue`  |
	// | Floating point number, 64 bits | `type.googleapis.com/google.protobuf.DoubleValue` |
	// | String                         | `type.googleapis.com/google.protobuf.StringValue` |
	// | Timestamp                      | `type.googleapis.com/google.protobuf.Timestamp`   |
	// | Duration                       | `type.googleapis.com/google.protobuf.Duration`    |
	// | Array of bytes                 | `type.googleapis.com/google.protobuf.BytesValue`  |
	// | Any JSON value                 | `type.googleapis.com/google.protobuf.Value`       |
	//
	// When using the HTTP+JSON version of the API the value provided in the `template_parameters` field of the order
	// must be represented as documented in the (ProtoJSON format document)[https://protobuf.dev/programming-guides/json].
	Type string
	// Default value for optional parameters.
	Default *anypb.Any
}

func (b0 ClusterTemplateParameterDefinition_builder) Build() *ClusterTemplateParameterDefinition {
	m0 := &ClusterTemplateParameterDefinition{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_Title = b.Title
	x.xxx_hidden_Description = b.Description
	x.xxx_hidden_Required = b.Required
	x.xxx_hidden_Type = b.Type
	x.xxx_hidden_Default = b.Default
	return m0
}

// Defines a set of nodes that will be part of cluster, all of them of the same class of host.
type ClusterTemplateNodeSet struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_HostClass string                 `protobuf:"bytes,1,opt,name=host_class,json=hostClass,proto3"`
	xxx_hidden_Size      int32                  `protobuf:"varint,2,opt,name=size,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ClusterTemplateNodeSet) Reset() {
	*x = ClusterTemplateNodeSet{}
	mi := &file_fulfillment_v1_cluster_template_type_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterTemplateNodeSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterTemplateNodeSet) ProtoMessage() {}

func (x *ClusterTemplateNodeSet) ProtoReflect() protoreflect.Message {
	mi := &file_fulfillment_v1_cluster_template_type_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClusterTemplateNodeSet) GetHostClass() string {
	if x != nil {
		return x.xxx_hidden_HostClass
	}
	return ""
}

func (x *ClusterTemplateNodeSet) GetSize() int32 {
	if x != nil {
		return x.xxx_hidden_Size
	}
	return 0
}

func (x *ClusterTemplateNodeSet) SetHostClass(v string) {
	x.xxx_hidden_HostClass = v
}

func (x *ClusterTemplateNodeSet) SetSize(v int32) {
	x.xxx_hidden_Size = v
}

type ClusterTemplateNodeSet_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Identifier of the class of hosts that are part of the set.
	HostClass string
	// Number of nodes of the set.
	Size int32
}

func (b0 ClusterTemplateNodeSet_builder) Build() *ClusterTemplateNodeSet {
	m0 := &ClusterTemplateNodeSet{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_HostClass = b.HostClass
	x.xxx_hidden_Size = b.Size
	return m0
}

var File_fulfillment_v1_cluster_template_type_proto protoreflect.FileDescriptor

var file_fulfillment_v1_cluster_template_type_proto_rawDesc = string([]byte{
	0x0a, 0x2a, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x66, 0x75,
	0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f,
	0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x03, 0x0a, 0x0f, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x52, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x4a, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x73, 0x65, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x66, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x53, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x53,
	0x65, 0x74, 0x73, 0x1a, 0x63, 0x0a, 0x0d, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd0, 0x01, 0x0a, 0x22, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x4b, 0x0a, 0x16, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x53, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x42, 0xd7, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d,
	0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x42,
	0x18, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x6e, 0x61, 0x62, 0x6f, 0x78, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6b, 0x69, 0x74, 0x2d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66,
	0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x66, 0x75,
	0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x46, 0x58,
	0x58, 0xaa, 0x02, 0x0e, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x0e, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1a, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x0f, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var file_fulfillment_v1_cluster_template_type_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_fulfillment_v1_cluster_template_type_proto_goTypes = []any{
	(*ClusterTemplate)(nil),                    // 0: fulfillment.v1.ClusterTemplate
	(*ClusterTemplateParameterDefinition)(nil), // 1: fulfillment.v1.ClusterTemplateParameterDefinition
	(*ClusterTemplateNodeSet)(nil),             // 2: fulfillment.v1.ClusterTemplateNodeSet
	nil,                                        // 3: fulfillment.v1.ClusterTemplate.NodeSetsEntry
	(*v1.Metadata)(nil),                        // 4: shared.v1.Metadata
	(*anypb.Any)(nil),                          // 5: google.protobuf.Any
}
var file_fulfillment_v1_cluster_template_type_proto_depIdxs = []int32{
	4, // 0: fulfillment.v1.ClusterTemplate.metadata:type_name -> shared.v1.Metadata
	1, // 1: fulfillment.v1.ClusterTemplate.parameters:type_name -> fulfillment.v1.ClusterTemplateParameterDefinition
	3, // 2: fulfillment.v1.ClusterTemplate.node_sets:type_name -> fulfillment.v1.ClusterTemplate.NodeSetsEntry
	5, // 3: fulfillment.v1.ClusterTemplateParameterDefinition.default:type_name -> google.protobuf.Any
	2, // 4: fulfillment.v1.ClusterTemplate.NodeSetsEntry.value:type_name -> fulfillment.v1.ClusterTemplateNodeSet
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_fulfillment_v1_cluster_template_type_proto_init() }
func file_fulfillment_v1_cluster_template_type_proto_init() {
	if File_fulfillment_v1_cluster_template_type_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fulfillment_v1_cluster_template_type_proto_rawDesc), len(file_fulfillment_v1_cluster_template_type_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fulfillment_v1_cluster_template_type_proto_goTypes,
		DependencyIndexes: file_fulfillment_v1_cluster_template_type_proto_depIdxs,
		MessageInfos:      file_fulfillment_v1_cluster_template_type_proto_msgTypes,
	}.Build()
	File_fulfillment_v1_cluster_template_type_proto = out.File
	file_fulfillment_v1_cluster_template_type_proto_goTypes = nil
	file_fulfillment_v1_cluster_template_type_proto_depIdxs = nil
}
